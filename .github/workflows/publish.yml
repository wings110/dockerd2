name: Build Docker for Android

on:
  push:
    tags:
      - "*"
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      # Checkout 主仓库
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # 构建 Docker 包
      - name: Build Docker
        run: |
          git clone --depth=0 https://github.com/tomxi1997/termux-packages termux-packages
          cd termux-packages

          # 安装依赖
          sudo apt update && sudo apt install -y tk-dev meson ninja-build pkg-config golang

          # 删除存在的 patch
          [ -f root-packages/containerd/too_long_path.patch ] && rm root-packages/containerd/too_long_path.patch

          # 修改 docker build.sh 脚本
          sed -i 's/TERMUX_PKG_VERSION=1:/TERMUX_PKG_VERSION=/' ./root-packages/docker/build.sh
          sed -i 's/${TERMUX_PKG_VERSION:2}/${TERMUX_PKG_VERSION}/g' ./root-packages/docker/build.sh

          # 应用自定义 patch
          patch -p1 < $GITHUB_WORKSPACE/patches/docker.patch

          # 构建 docker 包
          ./scripts/run-docker.sh ./build-package.sh -i --format debian docker docker-compose docker-buildx

          # 解压 deb 包并打包
          cd output
          rm -rf data
          mkdir data
          for FILE in ./*.deb; do
              dpkg -x "$FILE" data/
              echo "解压 '$FILE'"
          done

          tar -cJvf data.tar.xz data

      # 上传 artifact
      - name: Upload package
        uses: actions/upload-artifact@v4
        with:
          name: package
          path: termux-packages/output/data.tar.xz
